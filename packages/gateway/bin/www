/**
 * Module dependencies.
 */

const debug = require('debug')('gateway:server')
const http = require('http')
const app = require('../app')

require('dotenv').config()

const { PORT: port } = process.env

app.set('port', port)

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  const bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      // process.exit(1)
      throw new Error(`${bind} requires elevated privileges`)
    case 'EADDRINUSE':
      throw new Error(`${bind} is already in use`)
    default:
      throw error
  }
}

const server = http.createServer(app)

function onListening() {
  const addr = server.address()
  const bind = typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`
  debug(`Listening on ${bind}`)
}

server.listen(port)
server.on('error', onError)
server.on('listening', onListening)
